name: Check Pull Request

on:
  pull_request:
    branches:
      - '*'
    types:
      - opened
      - reopened
      - synchronize

jobs:
  pr-prep:
    name: Preparation
    runs-on: ubuntu-latest
    steps:
      - name: Check branch name
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const branchName = context.payload.pull_request.head.ref;
            const regex = /^(PAE-\d+)[-_]{1}.+$/i;
            const [match, ticketKey] = branchName.match(regex) ?? [null, null];

            if (!match || !ticketKey) {
              core.setFailed('Branch name does not match the required format: PAE-<NUMBER>-<desc>');
            } else {
              core.exportVariable('ticketKey', ticketKey.toUpperCase());
            }
      - name: Add ticket link to PR description
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { pull_request, repository } = context.payload;
            const { body: previousBody } = pull_request;
            const { ticketKey } = process.env;
            const ticketLink = `[${ticketKey}](https://eaflood.atlassian.net/browse/${ticketKey})`;

            if (!previousBody.includes(ticketLink)) {
              github.rest.pulls.update({
                owner: repository.owner.login,
                repo: repository.name,
                pull_number: pull_request.number,
                body: `Ticket: ${ticketLink}\n${previousBody}`,
              });
            } else {
              console.log('PR description already contains a link to the ticket')
            }

  pr-validator:
    name: Run Pull Request Checks
    runs-on: ubuntu-latest
    needs: pr-prep
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test code and Create Test Coverage Reports
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
      - run: |
          npm ci
          npm run format:check
          npm run lint
          npm test

      - name: Test Docker Image Build
        run: |
          set +e
          docker build --no-cache --tag cdp-node-backend-template .
          exit $?

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
