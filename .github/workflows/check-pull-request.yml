name: Check Pull Request

on:
  pull_request:
    branches:
      - '*'
    types:
      - opened
      - reopened
      - synchronize

jobs:
  detect-changes:
    name: Detect Changed Files
    runs-on: ubuntu-latest
    outputs:
      docs-only: ${{ steps.check.outputs.docs-only }}
    steps:
      - name: Check for docs-only changes
        id: check
        uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const docsOnly = files.length > 0 && files.every(file => file.filename.endsWith('.md'));

            core.setOutput('docs-only', docsOnly);
            console.log(`Documentation-only changes: ${docsOnly}`);
            console.log(`Changed files: ${files.map(f => f.filename).join(', ')}`)

  pr-prep:
    name: Preparation
    runs-on: ubuntu-latest
    needs: detect-changes
    steps:
      - name: Check branch name
        uses: actions/github-script@v8
        if: ${{ github.actor != 'dependabot[bot]' && !startsWith(github.head_ref, 'dependabot/') && !startsWith(github.head_ref, 'snyk-upgrade-') }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const branchName = context.payload.pull_request.head.ref;
            const regex = /^(PAE-\d+)[-_]{1}.+$/i;
            const [match, ticketKey] = branchName.match(regex) ?? [null, null];

            if (!match || !ticketKey) {
              core.setFailed('Branch name does not match the required format: PAE-<NUMBER>-<desc>');
            } else {
              core.exportVariable('ticketKey', ticketKey.toUpperCase());
            }
      - name: Add ticket link to PR description
        uses: actions/github-script@v8
        if: ${{ github.actor != 'dependabot[bot]' && !startsWith(github.head_ref, 'dependabot/') && !startsWith(github.head_ref, 'snyk-upgrade-') }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { pull_request, repository } = context.payload;
            const { body: previousBody } = pull_request;
            const { ticketKey } = process.env;
            const ticketLink = `[${ticketKey}](https://eaflood.atlassian.net/browse/${ticketKey})`;

            if (!previousBody.includes(ticketLink)) {
              github.rest.pulls.update({
                owner: repository.owner.login,
                repo: repository.name,
                pull_number: pull_request.number,
                body: `Ticket: ${ticketLink}\n${previousBody}`,
              });
            } else {
              console.log('PR description already contains a link to the ticket')
            }

      - name: Checkout code for ADR check
        uses: actions/checkout@v5
        if: ${{ github.actor != 'dependabot[bot]' && !startsWith(github.head_ref, 'dependabot/') && !startsWith(github.head_ref, 'snyk-upgrade-') }}

      - name: Check for ADR numbering conflicts
        if: ${{ github.actor != 'dependabot[bot]' && !startsWith(github.head_ref, 'dependabot/') && !startsWith(github.head_ref, 'snyk-upgrade-') }}
        run: |
          cd docs/architecture/decisions
          duplicates=$(ls -1 *.md | grep -E '^[0-9]{4}-' | sed 's/^\([0-9]\{4\}\)-.*/\1/' | sort | uniq -d)
          if [ -n "$duplicates" ]; then
            echo "Error: Duplicate ADR numbers found:"
            echo "$duplicates"
            exit 1
          fi
          echo "No ADR numbering conflicts found"

  pr-validator:
    name: Run Pull Request Checks
    runs-on: ubuntu-latest
    needs: [pr-prep, detect-changes]
    if: needs.detect-changes.outputs.docs-only != 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Test code and Create Test Coverage Reports
        uses: actions/setup-node@v6
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Cache MongoDB binaries
        uses: actions/cache@v4
        with:
          path: ~/.cache/mongodb-binaries
          key: mongodb-binaries-${{ runner.os }}-7.0.14
          restore-keys: |
            mongodb-binaries-${{ runner.os }}-

      - run: |
          npm ci --ignore-scripts
          npm run format:check
          npm run lint
          npm test

      - name: Test Docker Image Build
        run: |
          set +e
          docker build --no-cache --tag cdp-node-backend-template .
          exit $?

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v6 #  (or check latest version on https://github.com/marketplace/actions/official-sonarqube-scan)
        if: ${{ github.actor != 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  test-journey:
    name: Run Journey Tests
    runs-on: ubuntu-latest
    needs: [pr-validator, detect-changes]
    if: needs.detect-changes.outputs.docs-only != 'true'
    steps:
      - uses: actions/checkout@v5
      - run: docker build -t defradigital/epr-backend:${{github.sha}} .
      - uses: DEFRA/epr-backend-journey-tests/run-journey-tests@main
        with:
          epr-backend: ${{github.sha}}
          branch: main
